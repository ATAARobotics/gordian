{"name":"Gordian","tagline":"Alberta Tech Alliance's Scripting Language","body":"##Gordian##\r\n============\r\n\r\nAlberta Tech Alliance's Scripting Language\r\n\r\nDesigned for quick, easy scripting of autonomous modes\r\n\r\n##Script Specification##\r\n===========\r\n\r\n#Using Gordian\r\nTo run multiple methods / assignments in a row, separate the commands using semi-colons or newlines.\r\n\r\n    foo();bar;\r\nor\r\n\r\n    foo()\r\n    bar()\r\nor\r\n\r\n    foo();\r\n    bar();\r\n\r\n#Comments\r\nComments are marked using pound signs\r\n\r\n    foo();\r\n    #bar();\r\nbar(); will never be run\r\n\r\n##If statements\r\nIf statements use the notation\r\n\r\n    if(statement) [\r\n        foo();\r\n    ] else [\r\n        bar();\r\n    ]\r\n\r\n#While loops\r\nWhile loops use the notation\r\n\r\n    while(statement) [\r\n        foo();\r\n    ]\r\n\r\n#For loops\r\nFor loops use the notation\r\n\r\n    for(Integer) [\r\n        bar();\r\n    ]\r\nFor loops take the number of times to loop as an argument. They do not follow the typical notation.\r\n\r\n#Assignments\r\nTo assign a variable use the notation\r\n\r\n    string = \"String\"\r\n    integer = 20\r\n    double = 120.3443\r\n    boolean = true\r\nType is inferred, so no type declaration is needed.\r\n\r\n##Values\r\n#Strings\r\nStrings are in the notation\r\n    \"String\"\r\nWhich is equivalent to \r\n    String\r\nQuotation marks are ignored and treated as boundaries of the string (only if 2 quotation marks exist)\r\n#Doubles / Integers\r\nDouble and Integer type is inferred (ie. 2 is an integer and 2.1 is a double), and cannot be declared.\r\n#Calculations\r\nAll calculations are double values. Calculations follow basic PEDMAS rules. Parenthesis are not available (use multi-step calculations if needed).\r\nVariables can be used in calculations.\r\n\r\n    x = 10.3 / 1\r\n    y = 2039 * 9 + x / 2\r\nIn this case\r\n\r\n    x = (10.3 / 1.0)\r\n    y = (2039 * 9.0) + ((10.3) / 2.0)\r\nInteger division is treated as double division.\r\n\r\n#Operators\r\nIntegers and Doubles can be incremented or decremented using \"++\" and \"--\"\r\n\r\n    x = 10\r\n    x--\r\n    # x is 9\r\n    x++\r\n    # x is 10\r\n\r\n#Booleans\r\nBooleans can be literal values of \"true\" and \"false\".\r\n\r\n    x = true\r\n    y = false\r\nThey can also contain &&, ||, >, <, >=, <=, == and !=\r\n\r\n    x = true && true\r\n    # x is true\r\n    x = x || false\r\n    # x is still true\r\n    x = 10 > 3\r\n    # x is still true\r\n    x = 12 < 7\r\n    # x is false\r\n    x = 1 >= 1\r\n    # x is true\r\n    x = 29 <= 2\r\n    # x is false\r\n    x = 12 == 12\r\n    # x is true\r\n    x = 13 != 13\r\n    # x is false\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}